@import "./Components/variables";

#portal,
#prompt {
  position: fixed;
  height: max-content;
  width: max-content;
  top: 0;
  left: 0;
  z-index: 100;
  display: grid;
  place-items: center;
  margin: auto;
  pointer-events: none;
  max-height: calc((var(--vh) * 100));
  & > * {
    pointer-events: all;
    grid-column: 1/2;
    grid-row: 1/2;
  }
}

.App {
  min-height: calc((var(--vh) * 100));
  display: grid;
}

.modalBackdrop {
  height: calc((var(--vh) * 100));
  width: 100vw;
  background: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(10px);
  pointer-events: all;
}
.modal {
  pointer-events: all;
  z-index: 10;
  // background: linear-gradient(
  //   180deg,
  //   rgba(var(--bg-2), 0.8) 0%,
  //   rgba(var(--bg-2), 1) 100%
  // );
  max-height: calc((var(--vh) * 100) - 2rem);
  max-width: calc(100vw - 2rem);
  & ~ .modalBackdrop {
    z-index: 10;
    & ~ .modal {
      z-index: 10;
    }
  }
  position: relative;
  border-radius: 1rem;
  // border: 1px solid rgba(var(--bg-3), 1);
  // backdrop-filter: blur(5px);
  display: grid;
  overflow: auto;
  top: auto;
  left: auto;
  height: max-content;
  width: max-content;
  &.withHead {
    overflow: hidden;
    & > div:nth-child(2) {
      overflow: auto;
      max-height: calc((var(--vh) * 100) - (3rem + 36px));
      max-width: calc(100vw - 3rem);
    }
  }
  .head {
    border-radius: 0.5rem 0.5rem 0 0;
    // color: white;
    font-weight: 500;
    padding: 2px 10px;
    padding-right: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    button {
      font-size: 2rem;
      padding: 0.25rem;
      // color: white;
    }
  }
}

body.dark {
  .modal {
    // border-color: rgba(var(--font-color), 0.1);
    // background: linear-gradient(
    //   180deg,
    //   rgba(var(--bg-2), 0.95) 0%,
    //   rgba(var(--bg-2), 1) 100%
    // );
  }
}

.promptBackdrop {
  height: calc((var(--vh) * 100));
  width: 100vw;
  background: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(10px);
}
.prompt {
  padding: 5px 2rem;
  padding-bottom: 2rem;
  border-radius: 0.5rem;
  position: relative;
  text-align: center;
  width: 100%;
  max-width: 25rem;
  .close {
    position: absolute;
    right: 10px;
    top: 10px;
    font-size: 2rem;
    color: #4f4f4f;
  }
  .content {
    display: grid;
    grid-gap: 1.3rem;
    .label {
      display: grid;
      justify-content: center;
      margin-bottom: -1rem;
      .svg {
        font-size: 3.75rem;
        font-weight: bold;
      }
      .promptLabel {
        font-size: 1.5rem;
        line-height: 0.5em;
      }
      &.confirmation {
        color: rgb(254, 183, 0);
      }
      &.information {
        color: rgb(var(--blue));
      }
      &.success {
        color: $green;
      }
      &._error {
        color: $red;
      }
    }
    p {
      overflow-wrap: anywhere;
    }
    .actions {
      justify-content: center;
      display: flex;
      grid-gap: 0.7rem;
      .no {
        filter: saturate(0);
        opacity: 0.7;
      }
    }
  }
}

.reactSelect {
  width: 100%;
  &:focus-within {
    border-color: $primary-color;
  }
  &.err {
    border-color: red;
  }
  &.reactSelect--is-disabled {
    background: rgb(var(--bg-2));
  }
  border: 2px solid rgb(var(--bg-2));
  border-radius: 1.7em;
  .reactSelect__control {
    display: flex;
    height: min-content;
    color: rgb(var(--font-color));
    border-radius: 1.5em;
    background: rgb(var(--bg-1)) !important;
    .reactSelect__value-container {
      padding: 0.75rem 1rem;
      &:has(.reactSelect__multi-value) {
        padding-right: 0;
      }
      .reactSelect__multi-value {
        background: rgb(var(--bg-2));
        border-radius: 6px;
        overflow: hidden;
        .reactSelect__multi-value__label {
          color: rgb(var(--font-color));
        }
      }
    }
    .reactSelect__single-value,
    .reactSelect__input-container {
      align-items: center;
      max-height: 24px;
      padding: 0 !important;
      margin: 0;
      grid-column: 1/2;
      grid-row: 1/2;
      font-size: 13.5px !important;
      color: rgb(var(--font-color));
      min-width: 7rem;
      // max-width: 6rem;
    }
    .reactSelect__indicators {
      margin-right: 6px;
      .reactSelect__indicator {
        // color: white;
        padding: 6px;
      }
    }
    .reactSelect__placeholder {
      font-size: 13px;
    }
    .reactSelect__indicator-separator {
      display: none;
    }
    .reactSelect__menu {
      background: rgb(var(--bg-3));
      .react-select__menu-list {
        background: rgb(var(--bg-3));
        box-shadow: none;
        .react-select__option {
          background: rgb(var(--bg-3));
          padding: 10px;
        }
      }
    }
  }
  &.hideMultipleValue {
    .reactSelect__clear-indicator,
    .reactSelect__multi-value {
      display: none;
    }
  }
  &.readOnly {
    pointer-events: none;
    .reactSelect__control {
      background: #f5f4f4;
    }
  }
}
.reactSelect__menu {
  background: rgba(var(--bg-1), 0.7) !important;
  border-color: rgba(var(--bg-3), 0.75);
  backdrop-filter: blur(10px);
  .reactSelect__option {
    color: rgb(var(--font-color));
    background: transparent;
    &:hover,
    &:active {
      background: rgba(var(--bg-2), 0.5);
    }
  }
}

.rdrDateRangePickerWrapper {
  .rdrDefinedRangesWrapper {
    display: none;
  }
  .rdrDateDisplayWrapper {
    .rdrDateDisplayItemActive {
      color: $primary-color;
    }
  }
  .rdrDays {
    button {
      z-index: 1;
      .rdrStartEdge,
      .rdrInRange,
      .rdrEndEdge {
        color: $primary-color-dark1 !important;
      }
      .rdrDayStartPreview,
      .rdrDayInPreview,
      .rdrDayEndPreview {
        border-color: $primary-color-dark1 !important;
      }
      &.rdrDayToday {
        span::after {
          background: $primary-color-dark2;
        }
      }
    }
  }
  &.multiple {
    .rdrDays {
      button {
        .rdrStartEdge,
        .rdrInRange,
        .rdrEndEdge {
          color: $orange !important;
        }
        .rdrDayStartPreview,
        .rdrDayInPreview,
        .rdrDayEndPreview {
          border-color: $orange !important;
        }
      }
    }
  }
}

.deathPage {
  height: 100vh;
  overflow: hidden;
  background: #112643;
  img {
    height: 100%;
    width: 100%;
    object-fit: contain;
  }
  position: relative;
  .content {
    position: absolute;
    top: 40%;
    left: 24vw;
    color: white;
    display: grid;
    font-size: 1.75vmin;
    grid-gap: 1em;
    max-width: 13em;
    h2 {
      font-size: 3em;
    }
    p {
      font-size: 1.2em;
      margin-bottom: 1em;
    }
    a {
      border: 2px solid $orange;
      width: max-content;
      padding: 0.75em 1.5em;
      border-radius: 0.5em;
      font-size: 0.8em;
      background: #112643;
      &:hover {
        background: $orange;
      }
    }
  }
}

@media only screen and (min-width: 480px) {
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
    background-color: rgba($primary-color, 0.2);
    border-radius: 1rem;
  }
  ::-webkit-scrollbar-thumb {
    background-color: $primary-color;
    border-radius: 1rem;
  }
}

@media only screen and (max-width: 480px) {
  .modal {
    max-height: calc((var(--vh) * 100));
    max-width: 100vw;
    &.withHead {
      & > div:nth-child(2) {
        overflow: auto;
        max-height: calc((var(--vh) * 100 - 44px));
        max-width: 100vw;
      }
    }
  }

  .deathPage {
    display: grid;
    img {
      margin: auto;
      height: 70%;
      object-fit: cover;
      margin-bottom: 4rem;
    }
    .content {
      text-align: right;
      top: 20%;
      font-size: 1rem;
      left: unset;
      right: 3.5rem;
      a {
        margin: auto;
        margin-right: 0;
      }
    }
  }
}
