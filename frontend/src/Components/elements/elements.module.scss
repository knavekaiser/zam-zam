@import "../variables";

.input {
  display: grid;
  position: relative;
  grid-auto-rows: min-content;
  label {
    font-size: 0.8rem;
    font-weight: 400;
    margin-bottom: 0.2rem;
    white-space: nowrap;
    width: max-content;
  }
  .wrapper {
    position: relative;
    .field {
      position: relative;
      & > svg {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        margin: auto;
        right: 6px;
        z-index: 10;
      }
    }
  }
  input,
  textarea {
    font-family: "Roboto", "SolaimanLipi", -apple-system, BlinkMacSystemFont,
      "Segoe UI", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans",
      "Helvetica Neue", sans-serif;
    border-radius: 2rem;
    padding: 0.75rem 1rem;
    &:-webkit-autofill,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus,
    &:-webkit-autofill:active {
      -webkit-box-shadow: 0 0 0 30rem rgb(var(--bg-1)) inset !important;
      -webkit-text-fill-color: rgb(var(--font-color)) !important;
    }
  }
  textarea {
    padding: 1rem;
    border-radius: 1.3rem;
    resize: none !important;
  }
  input,
  textarea {
    color: rgb(var(--font-color));
    background: rgb(var(--bg-1));
    min-height: 44px;
    line-height: normal !important;
    width: 100%;
    border: 2px solid rgb(var(--bg-2));
    outline: none;
    // border-radius: 4px;
    min-width: 4rem;
    font-size: 0.88em;
    &:focus {
      border-color: $primary-color;
    }
    &:read-only {
      background: #f5f4f4;
    }
    &:not(.ticker) {
      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      /* Firefox */
      &[type="number"] {
        -moz-appearance: textfield;
      }
    }
    &:disabled,
    &[disabled] {
      font-style: italic;
      color: rgba(var(--font-color), 0.7) !important;
      background: rgb(var(--bg-1));
    }
    &::placeholder {
      color: rgba(var(--font-color), 0.4);
    }
  }
  textarea {
    resize: vertical;
    min-height: 3rem;
    font-size: 1em;
    font-family: inherit;
  }
  &.err {
    input,
    textarea {
      border-color: red;
    }
  }
  .errIcon {
    position: absolute;
    right: 6px;
    top: 50%;
    color: red;
    font-size: 0.8em;
    pointer-events: none;
    display: grid;
    place-items: center;
    transform: translateY(-50%);
    svg {
      position: static;
    }
  }
  .errMsg {
    font-size: 10pt;
    color: red;
    text-align: left;
    display: block;
  }
  .calenderIcon {
    font-size: 15pt;
    z-index: 10;
    color: rgba(var(--font-color), 0.7);
    background: rgb(var(--bg-1));
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    width: 2rem;
    position: absolute;
    right: 10px;
    border-radius: 4px;
    height: 80%;
    display: grid;
    place-items: center;
  }
  &.passwordInput {
    .eye {
      z-index: 4;
      position: absolute;
      color: inherit;
      background: none;
      border: none;
      top: -15%;
      display: grid;
      right: 0.75rem;
      font-size: 1.5rem;
      cursor: pointer;
    }
  }
  &.mobileNumberInput {
    .wrapper {
      & > .field {
        border: 1px solid #b7b7b7;
        border-radius: 4px;
        display: grid;
        .country {
          grid-column: 1/2;
          grid-row: 1/2;
          .countryFlags {
            .field {
              height: 28px;
              align-items: center;
              .displayValue {
                height: min-content;
                border: none;
                display: grid;
                width: 20px;
                img {
                  display: relative;
                }
              }
              & > input {
                padding: 0;
                border: none;
                width: 0;
              }
              .btn {
                left: 33px;
                svg {
                  position: unset;
                  margin-top: -8px;
                }
              }
            }
          }
        }
        & > input {
          z-index: 10;
          margin-left: 3rem;
          width: calc(100% - 3rem);
          grid-column: 1/2;
          grid-row: 1/2;
          border: none;
        }
      }
      .errIcon {
        z-index: 15;
      }
    }
    &.err {
      .wrapper > .field {
        border-color: red;
      }
    }
  }
  &.textarea {
    .field {
      position: relative;
      height: min-content;
      display: grid;
    }
    .errIcon {
      top: 6px;
      right: 8px;
      transform: none;
    }
  }
}
.fileInput {
  .label {
    font-size: 0.8rem;
    white-space: nowrap;
    margin-bottom: 0.2rem;
    color: var(--text-color-1);
    .req {
      color: red;
    }
  }
  .files {
    border: 1px solid rgb(var(--font-color), 0.3);
    border-radius: 0.5rem;
    padding: 1rem;
    display: flex;
    flex-wrap: wrap;
    grid-gap: 1rem;
    li {
      overflow: hidden;
      border: 1px solid rgb(var(--font-color), 0.3);
      border-radius: 0.5rem;
      background: rgb(var(--bg-1));
      height: 120px;
      width: 120px;
      overflow: hidden;
      display: grid;
      place-items: center;
      position: relative;
      .clear {
        background: rgba(var(--bg-1), 0.5);
        border-radius: 0.5rem;
        font-size: 2rem;
        top: 0rem;
        right: 0rem;
        position: absolute;
        z-index: 10;
        padding: 0;
      }
      &.file {
        position: relative;
        .videoIcon {
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          color: rgba(255, 255, 255, 0.719);
          font-size: 3rem;
        }
        img,
        video {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
      }
      &.fileInputUploadBtn {
        label {
          display: grid;
          font-size: 1.6rem;
          width: 100%;
          height: 100%;
          cursor: pointer;
          background: rgb(250, 251, 252);
          color: rgb(155, 155, 155);
          &:hover {
            background: rgb(245, 246, 248);
          }
          svg {
            display: block;
            margin: auto;
            &.spinner {
              font-size: 2rem;
              animation: spin 1.5s linear infinite;
            }
          }
        }
      }
    }
    &.avatar {
      padding: 0;
      border: none;
      li {
        height: 150px;
        width: 150px;
        margin: auto;
        border-radius: 50%;
        button {
          top: unset;
          bottom: 0;
          right: unset;
          width: 100%;
          justify-content: center;
          background: rgba(255, 255, 255, 0.4);
        }
      }
    }
  }
  .inputField {
    border-radius: 0.5rem;
    overflow: hidden;
    label {
      border: 2px dashed rgb(var(--font-color), 0.1);
      cursor: pointer;
      display: grid;
      aspect-ratio: 3.5;
      font-size: 13.5px;
      background: rgb(var(--bg-1));
      color: rgb(var(--font-color), 0.4);
      place-items: center;
      &:hover {
        background: rgb(var(--bg-1), 0.5);
      }
      &.dragOver {
        border-color: rgb(var(--font-color), 0.2);
        background: rgb(var(--primary-color-rgb), 0.025);
      }
      .wrapper {
        pointer-events: none;
        place-items: center;
        display: grid;
      }
      .downlaod {
        path:nth-child(2) {
          animation: updown 0.5s cubic-bezier(0.04, 0.34, 0.65, 0.88) infinite
            alternate;
        }
      }
      .icon {
        margin: auto;
        font-size: 2rem;
        border-radius: 0 0.5rem 0.5rem 0;
        padding: 0.7rem 1rem;
      }
      .hint {
        margin: auto;
      }
    }
  }
  &:has(.inputField) {
    .files {
      border-bottom: none;
      border-radius: 0.5rem 0.5rem 0 0;
    }
  }
  &:has(.files) {
    .inputField {
      border-radius: 0 0 0.5rem 0.5rem;
    }
  }
  .fileTable {
    table {
      width: 100%;
      border: 1px solid rgb(var(--font-color), 0.2);
      margin-top: 0.5rem;
      border-radius: 0.5rem;

      tr {
        td {
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
        .tableActions {
          margin: auto;
          margin-right: 0;
          button {
            color: gray;
            font-size: 1.25rem;
          }
        }
        grid-template-columns: 1fr 3.5rem;
      }
    }
  }
  &.error {
    .inputField {
      border-color: red;
    }
    .files {
      border-color: red;
    }
  }
}
.radio {
  display: flex;
  flex-wrap: wrap;
  grid-gap: 1.5rem;
  grid-row-gap: 0.5rem;
  label {
    position: relative;
    cursor: pointer;
    align-items: center;
    display: flex;
    grid-gap: 0.3rem;
    font-size: 0.95rem;
    &.disabled {
      pointer-events: none;
      opacity: 0.5;
    }
    .hint {
      display: none;
      position: absolute;
      background: white;
      padding: 0.5rem;
      width: 13rem;
      font-size: 0.85rem;
      z-index: 5;
      top: calc(100% + 0.9rem);
      left: 0;
      filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5));
      border-radius: 5px;
      pointer-events: none;
      &::before {
        content: "";
        display: block;
        width: 0;
        height: 0;
        border: 0.5rem solid transparent;
        border-top: 0;
        border-bottom: 0.7rem solid white;
        position: absolute;
        left: 1.5rem;
        top: -0.7rem;
      }
    }
    &:hover {
      .hint {
        display: block;
      }
    }
  }
  .errMsg {
    color: red;
    font-size: 10pt;
    text-align: left;
    flex-basis: 100%;
  }
}
.toggle {
  background: #bfbfbf;
  width: 2rem;
  border-radius: 2rem;
  padding: 2px;
  cursor: pointer;
  label {
    cursor: pointer;
  }
  .ball {
    display: block;
    background: white;
    height: 12px;
    width: 12px;
    border-radius: 50%;
    position: relative;
    margin: auto;
    margin-left: 0;
  }
  &.on {
    background: #3450a3;
    .ball {
      margin-left: auto;
      margin-right: 0 !important;
    }
  }
  &.readOnly {
    cursor: default;
    .ball {
      cursor: default;
    }
    &.on {
      // background: rgb(119, 119, 119);
    }
  }
}

.combobox {
  cursor: pointer;
  & > label {
    font-size: 0.8rem;
    font-weight: 600;
    margin-bottom: 0.2rem;
    display: block;
    white-space: nowrap;
  }
  &.open {
    .field {
      & > input {
        border-radius: 4px 4px 0 0;
      }
      .btn {
        transform: rotate(180deg);
      }
    }
  }
  .field {
    position: relative;
    display: grid;
    & > * {
      grid-column: 1/-1;
      grid-row: 1/-1;
    }
    .displayValue {
      z-index: 10;
      background-color: white;
      // cursor: pointer;
      text-align: left;
      white-space: nowrap;
      width: 100%;
      border: 1px solid #b7b7b7;
      padding: 4px 6.5px;
      padding-right: 1.6rem;
      overflow: hidden;
      text-overflow: ellipsis;
      -webkit-line-clamp: 1;
      height: 30px;
      display: flex;
      align-items: center;
      border-radius: 4px;
      font-size: 13px;
      color: black;
      &.placeholder {
        color: #666666;
      }
    }
    & > input {
      width: 100%;
      height: 0;
      border: 1px solid #b7b7b7;
      padding: 6.5px;
      padding-right: 1.6rem;
      border-radius: 4px;
      outline: none;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    .btn {
      z-index: 12;
      position: absolute;
      bottom: 6px;
      display: grid;
      place-items: center;
      svg {
        margin-top: -7px;
        margin-right: 2px;
      }
      background: white;
      right: 6px;
      height: 1rem;
      width: 1rem;
    }
  }
  &.noOptions {
    cursor: default;
    .field {
      .displayValue {
        background: rgb(235, 235, 235);
      }
      .btn {
        background: rgb(235, 235, 235);
      }
    }
  }
  &:focus-within {
    .field {
      p {
        border-color: $primary-color;
      }
    }
  }
  &.err {
    .field {
      .displayValue {
        border-color: red;
      }
    }
  }
  .errMsg {
    color: red !important;
    font-size: 10pt;
    text-align: left;
    display: block;
  }
}
.searchFieldModal,
.comboboxModal {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.45);
  height: min-content !important;
  .options {
    cursor: pointer;
    z-index: 9999999999999;
    border-radius: 0 0 4px 4px;
    border: 1px solid #b7b7b7;
    background: white;
    width: 100%;
    li {
      font-size: 14px;
      position: relative;
      input {
        cursor: pointer;
        flex-shrink: 0;
        margin-right: 6px;
      }
      display: flex;
      align-items: center;
      padding: 8px;
      &:not(:last-child) {
        &::after {
          content: "";
          display: block;
          position: absolute;
          background: #e8e8e8;
          height: 1px;
          width: 90%;
          bottom: 0;
        }
      }
      &.selected {
        background: $grey1;
      }
      &.hover {
        background: rgba($primary-color, 0.3) !important;
      }
      &.disabled {
        font-style: italic;
        color: $grey2;
        cursor: not-allowed;
      }
    }
    overflow-x: hidden;
    margin: 0 !important;
  }
}
.searchFieldModalBackdrop,
.comboboxBackdrop {
  background: rgba(0, 0, 0, 0) !important;
}

.imgInput {
  font-size: 2rem;
  label {
    color: $primary-color;
    display: grid;
    height: 4em;
    width: 4em;
    border-radius: 50%;
    place-items: center;
    outline: 2px solid $primary-color;
    outline-offset: 0.15em;
    cursor: pointer;
  }
  img {
    height: 100%;
    width: 100%;
    border-radius: 50%;
  }
}
.avatarModal {
  border-radius: 1rem;
  display: grid;
  grid-gap: 1rem;
  .canvasWrapper {
    grid-gap: 4rem;
    place-items: center;
    // canvas {
    //   width: 22rem !important;
    //   height: 27rem !important;
    // }
  }
  .range {
    padding: 0 1rem;
    display: grid;
  }
  .actions {
    padding-top: 0;
  }
}

.checkbox {
  display: flex;
  align-items: center;
  grid-gap: 6px;
  input {
    flex-shrink: 0;
  }
}

.chip {
  display: flex;
  align-items: center;
  grid-gap: 8px;
  border: 1px solid rgb(186, 194, 199);
  background: rgb(246, 246, 246);
  border-radius: 3px;
  padding: 0 8px;
  font-size: 14px;
  width: max-content;
  button {
    font-size: 18px;
    color: red !important;
  }
}

.table {
  display: grid;
  grid-auto-rows: max-content;
  overflow-x: auto !important;
  width: 100%;
  position: relative;
  tr {
    // color: white;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));
    align-items: center;
    // color: #363843;
    grid-gap: 20px;

    td,
    th {
      padding: 4px 0;
    }
    &.placeholder {
      text-align: center;
      // background: rgb(244, 244, 244);
      td {
        grid-column: 1 / -1;
        padding: 2rem;
        font-style: italic;
      }
    }
  }
  thead {
    background: linear-gradient(
      80deg,
      rgba($primary-color, 0.85) 0%,
      rgba($primary-color-dark1, 1) 100%
    );
    position: sticky;
    top: 0;
    z-index: 10;
    tr {
      background: inherit;
      // font-size: 12px;
      font-weight: bold;
      padding: 0 1rem;
    }
    th {
      padding: 1rem 0;
      color: white;
      text-align: left;
      &.action {
        background: inherit;
        position: sticky;
        right: 0;
        margin-left: -10px;
        padding-left: 10px !important;
      }
    }
  }
  tbody {
    padding: 0 0.5rem;
    tr {
      padding: 0 0.5rem;
      td {
        margin: 0.5rem 0;
        padding: 0;
      }
      &:not(:last-child) {
        border-bottom: 1px solid rgba(var(--font-color), 0.1);
      }

      &.loading {
        padding: 2rem;
        border: none;
        grid-template-columns: 1fr !important;
        td {
          justify-content: center;
          border: none !important;
          display: flex;
          align-items: center;
          grid-gap: 6px;
          color: $primary-color;
          .icon {
            font-size: 1.7rem;
          }
          svg {
            animation: spin 1s infinite linear;
          }
        }
      }
    }
    :global(.light) & {
      tr {
        &:not(:last-child) {
          border-bottom: 1px solid rgba(var(--font-color), 0.15);
        }
      }
    }
  }
  &.actions {
    tr {
      padding-right: 0;
    }
    th,
    td {
      &:last-child {
        padding: 0 8px;
        position: sticky;
        right: 0;
        background: inherit;
        border-left: 1px solid rgba(0, 0, 0, 0.1);
        display: flex;
        height: 100%;
        align-items: center;
      }
    }
  }
  &:not(.virtual) {
    tbody {
      tr {
        // &:nth-child(even) {
        //   background: rgba($primary-color, 0.1);
        // }
        // &:nth-child(odd) {
        //   background: #ffffff;
        // }
      }
    }
  }
  &.virtual {
    tbody {
      min-height: 60vh;
    }
  }
}

.imageTumbnail {
  height: 3rem;
  width: 3rem;
  &.multiple {
    img {
      box-shadow: 6px 0 rgba(#000000, 0.2), 12px 0 rgba(#000000, 0.1);
    }
  }
  img {
    cursor: pointer;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 5px;
  }
}

.imageViewModal {
  background: none;
  height: 100%;
  width: 100%;
  grid-template-rows: min-content 1fr min-content;
  .closeBtn {
    // color: white;
    font-size: 2rem;
    width: min-content;
    margin: auto;
    margin-right: 0;
  }
  .mainImg {
    margin: auto;
    max-height: calc((var(--vh) * 100) - 15rem);
    max-width: 95%;
    border-radius: 5px;
  }
  .thumbnails {
    display: flex;
    grid-gap: 1rem;
    padding: 0.5rem;
    margin: auto;
    overflow: auto;
    max-width: 100%;
    img {
      height: 4rem;
      width: 4rem;
      object-fit: cover;
      cursor: pointer;
      border-radius: 5px;
      &.selected {
        box-shadow: 0 0 0 3px $primary-color;
      }
    }
  }
}
.imageViewModalBackdrop {
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(15px);
}

.tableActions {
  display: flex;
  justify-content: flex-end;
  position: sticky;
  right: 0;
}

.select {
  display: grid;
  height: min-content;
  label {
    font-size: 0.8rem;
    font-weight: 400;
    margin-bottom: 0.2rem;
    white-space: nowrap;
  }
  .field {
    display: flex;
    flex-wrap: wrap;
    grid-gap: 6px;
    .chip {
      height: 30px;
    }
  }
  .customValue {
    width: max-content;
  }
  .errMsg {
    font-size: 10pt;
    color: red;
    text-align: left;
    display: block;
  }
}

.importData {
  padding: 1rem;
  width: 18rem;
  max-width: calc(100vw - 3rem);
}

.spinner {
  margin: auto;
  svg {
    display: grid;
  }
}

$branch-angle: 35deg;

.fishboneDiagram {
  padding: 1rem;
  min-width: max-content;
  min-height: max-content;
  overflow: auto;
  display: flex;
  align-items: center;
  .data {
    flex: 1;
    flex-shrink: 0;
    display: grid;
    // grid-gap: 1rem;
    grid-auto-flow: column;
    text-align: right;
    grid-template-rows: 1fr 1fr;
    .branch {
      min-height: 150px;
      min-width: 150px;
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      &.top {
        border-bottom: 2px solid black;
        padding-right: 0rem;
        & > ul {
          padding-bottom: 1rem;
          // background: rgba(0, 0, 0, 0.07);
          position: relative;
          & > li {
            .cause {
              display: inline-block;
              padding: 0 1.5rem;
              padding-left: 0;
              border-bottom: 2px solid black;
              margin-top: 0.5rem;
            }
            & > ul {
              display: grid;
              margin-right: 1.5rem;
              position: relative;
              & > li {
                margin: auto;
                margin-top: 0.5rem;
                width: max-content;
                padding: 0 0.5rem;
                padding-left: 0;
                border-bottom: 2px solid black;
                font-size: 0.9em;
                // max-width: 15rem;
              }
              &::after {
                content: "";
                display: block;
                position: absolute;
                height: 122%;
                width: 2px;
                background: black;
                top: 0;
                right: 0;
                transform-origin: top;
                transform: rotate($branch-angle);
              }
            }
          }
          &::after {
            content: "";
            display: block;
            position: absolute;
            height: 122%;
            width: 2px;
            background: black;
            bottom: 0;
            right: 1.2rem;
            transform-origin: bottom;
            transform: rotate(-$branch-angle);
          }
        }
      }
      &.bottom {
        padding-right: 3rem;
        flex-direction: column-reverse;
        & > ul {
          padding-top: 1rem;
          // background: rgba(0, 0, 0, 0.07);
          position: relative;
          & > li {
            &:not(:first-child) {
              .cause {
                margin-top: 0.5rem;
              }
            }
            .cause {
              display: inline-block;
              padding: 0 1.5rem;
              padding-left: 0;
              border-bottom: 2px solid black;
            }
            & > ul {
              display: grid;
              margin-right: 1.5rem;
              position: relative;
              & > li {
                margin: auto;
                margin-top: 0.5rem;
                width: max-content;
                padding: 0 0.5rem;
                padding-left: 0;
                border-bottom: 2px solid black;
                font-size: 0.9em;
                // max-width: 15rem;
              }
              &::after {
                content: "";
                display: block;
                position: absolute;
                height: 122%;
                width: 2px;
                background: black;
                top: 0;
                right: 0;
                transform-origin: top;
                transform: rotate($branch-angle);
              }
            }
            &::after {
              content: "";
              display: block;
              position: absolute;
              height: 122%;
              width: 2px;
              background: black;
              top: 0;
              right: -1.8rem;
              transform-origin: top;
              transform: rotate($branch-angle);
            }
          }
        }
      }
      &:last-child:not(:nth-child(even)),
      &:nth-last-child(2):nth-child(odd) {
        // background: red;
        // padding-right: 3rem;
        & > ul {
        }
      }
    }
    .bottom {
      grid-row: 2 / 3;
    }
  }
  .conclusion {
    flex-shrink: 0;
    padding: 1rem;
    border: 2px solid black;
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
